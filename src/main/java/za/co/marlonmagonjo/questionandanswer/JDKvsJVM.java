package za.co.marlonmagonjo.questionandanswer;

/**
 *
 * In the context of Java programming, JDK (Java Development Kit) and JVM (Java Virtual Machine) are two important components, but they serve different purposes:
 *
 * 1. JDK (Java Development Kit):
 * The JDK is a software development kit provided by Oracle (formerly Sun Microsystems) and other vendors to develop Java applications. It includes a set of tools and utilities necessary for writing, compiling, and debugging Java programs.
 * The key components of JDK are:
 *    - Java Compiler (javac): It translates Java source code (.java files) into bytecode (.class files) that can be executed by the JVM.
 *    - Java Runtime Environment (JRE): The JRE is a subset of the JDK that contains the JVM and essential libraries required to run Java applications. It does not include development tools.
 *    - Additional tools: JDK provides various command-line utilities and tools like "java" for executing Java applications, "javadoc" for generating documentation from code comments, and others.
 *
 * In summary, the JDK is used by developers to create Java applications and provides all the necessary tools for coding, compiling, and debugging.
 *
 * 2. JVM (Java Virtual Machine):
 * The JVM, on the other hand, is a runtime environment that executes Java bytecode.
 * It is responsible for running Java applications on various platforms without modification.
 * The JVM acts as an intermediary between the platform-independent bytecode generated by the Java compiler and the underlying operating system and hardware.
 *
 * When a Java program is executed, the JVM loads the bytecode and translates it into machine code that the host operating system can understand.
 * Additionally, the JVM handles memory management, garbage collection, and other runtime tasks, providing a secure and controlled environment for Java applications to run.
 *
 * In summary, the JVM is responsible for running Java bytecode on different platforms, ensuring platform independence and providing an execution environment with memory management and other runtime capabilities.
 *
 * To summarize, the JDK is used by developers to create Java applications, while the JVM is responsible for executing those Java applications on various platforms.
 *
 */

public class JDKvsJVM {
    public static void main(String[] args) {

    }
}
